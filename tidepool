#!/bin/bash
shopt -s extglob

if [ -z "$TP_BASE_DIR" ]; then
  cat <<EOF
=====================================================================
You need to set the TP_BASE_DIR environment variable to the location
of your docker-compose.yml file for the tidepool stack

EOF
  exit 1
fi

NODE_SERVICES='@(blip|viz|hakken|gatekeeper|highwater|jellyfish|message-api|seagull|styx)'
BLIP_MOUNTED_NODE_SERVICES='@(tideline|tidepool-platform-client)'

usage() {
  cat <<EOF
=======================================================
Usage: tidepool command [service] [...additional args]

  commands:
    up [service]                    start and/or (re)build the entire tidepool stack or the specified service
    down [service]                  shut down the entire tidepool stack or the specified service
    restart [service]               restart the entire tidepool stack or the specified service
    pull [service]                  pull the latest images for the entire tidepool stack or the specified service
    logs [service]                  tail logs for the entire tidepool stack or the specified service

    rebuild [service]               rebuild and run image for all services in the tidepool stack
                                    or the specified service
                                    NOTE: the service(s) must have a 'build' property in the 'docker-compose.yml'
                                    file for this to have any effect.

    run service [...cmds]          run arbitrary shell commands against a service
                                      example: 'tidepool run blip sh' (to enter the container's shell)

    link service package            yarn link a mounted package and restart the service
                                    NOTE: the package must be mounted into a root directory that matches it's name
                                      example: 'tidepool link blip @tidepool/viz'
                                        - will link the package mounted at /@tidepool/viz and link the
                                          "@tidepool/viz" package in blip.

    unlink service package          yarn unlink a mounted package, reinstall the remote package, and restart
                                    NOTE: the package must be mounted into a root directory that matches it's name
                                      example: 'tidepool unlink blip tideline'
                                        - will link the package mounted at /tideline and unlink
                                          the "tideline" package in blip

    list                            list running services in the tidepool stack

    [node_service] [...cmds]        shortcut to run yarn commands against the specified nodeJS-based service
                                    frontend node services are one of: [blip|viz|tideline|tidepool-platform-client]
                                    NOTE: tideline and tidepool-platform-client are optional volume mounts
                                    within the blip service
                                      example: 'tidepool tideline install'
                                        ('install' is default yarn command, so it can be skipped here)
                                      example: 'tidepool viz run stories'
                                        ('run' is implied in yarn scrips, so 'tidepool viz stories' works too)
                                      example: 'tidepool tidepool-platform-client run test'
                                    backend node services are one of:
                                    [hakken|gatekeeper|highwater|jellyfish|message-api|seagull|styx]

    help                            show this help text

EOF
}

restart() { (cd $TP_BASE_DIR && docker-compose stop $1 && exec docker-compose start $1); }

run() { args=${@:2} && (cd $TP_BASE_DIR && exec docker-compose exec $1 /bin/sh -c "${args}") }

case $1 in
  up) (cd $TP_BASE_DIR && exec docker-compose up -d $2);;
  down) (cd $TP_BASE_DIR && exec docker-compose down $2);;
  restart) restart $2;;
  pull) (cd $TP_BASE_DIR && exec docker-compose pull $2);;
  logs) (cd $TP_BASE_DIR && exec docker-compose logs --tail=2000 -f $2);;
  rebuild) (cd $TP_BASE_DIR && docker-compose build $2 && exec docker-compose up -d $2);;
  run) run $2 ${@:3};;
  link) (cd $TP_BASE_DIR && exec docker-compose exec $2 /bin/sh -c "cd /${3} && yarn link && cd /app && yarn link ${3}") && restart $2;;
  unlink) (cd $TP_BASE_DIR && exec docker-compose exec $2 /bin/sh -c "yarn unlink ${3}; cd /${3} && yarn unlink; cd /app && rm -f node_modules/${3} && yarn install --force") && restart $2;;
  list) (cd $TP_BASE_DIR && exec docker-compose ps);;
  $NODE_SERVICES) run $1 "yarn ${@:2}";;
  $BLIP_MOUNTED_NODE_SERVICES) run blip "cd /${1} && yarn ${@:2}";;
  *|help) usage;;
esac
